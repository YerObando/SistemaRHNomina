@model SistemaNomina.Usuarios

@{
    ViewBag.Title = "Crear Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Crear Nuevo Usuario</h2>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.id_empleado, "Empleado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var empleadosList = ViewBag.id_empleado as SelectList;
                    if (empleadosList != null && empleadosList.Any())
                    {
                        @Html.DropDownList("id_empleado", empleadosList, "-- Seleccione un empleado --", htmlAttributes: new { @class = "form-control" })
                    }
                    else
                    {
                        <select class="form-control" id="id_empleado" name="id_empleado" disabled>
                            <option value="">-- No hay empleados disponibles --</option>
                        </select>
                    }
                }
                @Html.ValidationMessageFor(model => model.id_empleado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usuario, "Nombre de usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contrasena, "Contraseña temporal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contrasena, new { htmlAttributes = new { @class = "form-control", placeholder = "El usuario deberá cambiar esta contraseña en su primer ingreso" } })
                @Html.ValidationMessageFor(model => model.contrasena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_rol, "Rol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var rolesList = ViewBag.id_rol as SelectList;
                    if (rolesList != null && rolesList.Any())
                    {
                        @Html.DropDownList("id_rol", rolesList, "-- Seleccione un rol --", htmlAttributes: new { @class = "form-control" })
                    }
                    else
                    {
                        <select class="form-control" id="id_rol" name="id_rol" disabled>
                            <option value="">-- No hay roles disponibles --</option>
                        </select>
                    }
                }
                @Html.ValidationMessageFor(model => model.id_rol, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Campos ocultos que el controlador maneja automáticamente -->
        @Html.HiddenFor(model => model.primer_ingreso, new { Value = "true" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @{
                    bool puedeCrear = (ViewBag.id_empleado as SelectList)?.Any() == true &&
                                    (ViewBag.id_rol as SelectList)?.Any() == true;
                }
                <input type="submit" value="Crear Usuario" class="btn btn-primary" @(puedeCrear ? "" : "disabled") />
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}