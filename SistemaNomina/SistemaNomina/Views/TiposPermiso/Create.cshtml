@model SistemaNomina.TiposPermiso 

@{
    ViewBag.Title = "Create"; @* Título navegador *@
    Layout = "~/Views/Shared/_Layout.cshtml"; @* vista *@
}

<h2>Create</h2>  @* Título  página *@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken() @* seguridad *@

    <div class="form-horizontal">
        <h4>TiposPermiso</h4>  @* Subtítulo formulario *@
        <hr /> 

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })  @* Muestra errores de validación generales *@

        <div class="form-group">
            @* Grupo de campos para el nombre del permiso *@
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })  @* Etiqueta del campo 'nombre' *@
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })  @* Campo de texto para ingresar el nombre *@
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })  @* Mensaje de error si el campo 'nombre' no es válido *@
            </div>
        </div>

        <div class="form-group">
            @* Grupo de campos para el valor booleano 'con_goce'  *@
            @Html.LabelFor(model => model.con_goce, htmlAttributes: new { @class = "control-label col-md-2" })  @* Etiqueta del campo *@
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.con_goce)  @* Casilla de verificación *@
                    @Html.ValidationMessageFor(model => model.con_goce, "", new { @class = "text-danger" })  @* Mensaje de error si el valor no es válido *@
                </div>
            </div>
        </div>

        <div class="form-group">
            @* Grupo de campos para la descripción del permiso *@
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })  @* Etiqueta del campo *@
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })  @* Campo de texto para ingresar una descripción *@
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })  @* Mensaje de error de validación *@
            </div>
        </div>

        <div class="form-group">
            @* Campo para ingresar la fecha de creación *@
            @Html.LabelFor(model => model.fecha_creacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_creacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_creacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* Campo para ingresar la fecha de actualización *@
            @Html.LabelFor(model => model.fecha_actualizacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_actualizacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_actualizacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* Botón para enviar el formulario y crear el nuevo registro *@
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" /> 
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")  @* Enlace para regresar a la lista de registros *@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")  @* validación *@
}
